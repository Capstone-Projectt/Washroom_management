{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vaibhav\\\\Downloads\\\\washroom\\\\washroom\\\\frontend\\\\washrrom-management-app\\\\src\\\\components\\\\JobDetails.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport api from '../utils/api'; // Assuming this is an Axios instance or similar\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JobDetails = ({\n  job\n}) => {\n  _s();\n  const [currentStep, setCurrentStep] = useState(1);\n  const [checklist, setChecklist] = useState({\n    task1: false,\n    task2: false,\n    task3: false\n  });\n  const [error, setError] = useState(null); // State to handle errors\n\n  const handleStart = () => {\n    api.post('/api/start_job', {\n      jobId: job.id,\n      washroom_name: job.washroom\n    }).then(() => {\n      console.log('Door locked, job started');\n      setCurrentStep(2);\n      setError(null);\n    }).catch(err => {\n      console.error('Error starting job:', err);\n      if (err.response) {\n        // Server responded with a status code outside 2xx\n        setError(`Failed to start the job: ${err.response.data.message || 'Server error'}`);\n      } else if (err.request) {\n        // No response was received from server\n        setError('No response from server. Please check your connection.');\n      } else {\n        // Something else caused the error\n        setError(`Unexpected error: ${err.message}`);\n      }\n    });\n  };\n  const handleFinish = () => {\n    // Send signal to ESP32 to unlock door\n    api.post('/api/finish_job', {\n      jobId: job.id,\n      washroom_name: job.washroom\n    }).then(response => {\n      // Axios automatically resolves for 2xx responses\n      console.log('Door unlocked, job finished');\n      setError(null); // Clear any previous errors\n\n      // Reload the page after successful job finish\n      window.location.reload();\n    }).catch(err => {\n      console.error('Error finishing job:', err);\n      if (err.response) {\n        // Server responded with a status code outside 2xx\n        setError(`Failed to finish the job: ${err.response.data.message || 'Server error'}`);\n      } else if (err.request) {\n        // No response was received from server\n        setError('No response from server. Please check your connection.');\n      } else {\n        // Something else caused the error\n        setError(`Unexpected error: ${err.message}`);\n      }\n    });\n  };\n  const toggleChecklistItem = item => {\n    setChecklist({\n      ...checklist,\n      [item]: !checklist[item]\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"job-details\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Job Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: `Department: ${job.department}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: `Washroom name: ${job.washroom}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: `labboy name: ${job.lab_boy}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }, this), \" \", currentStep === 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"step-1\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Step 1: Instructions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Please ensure you have all necessary cleaning materials before starting.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleStart,\n        children: \"Start Job\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this), currentStep === 2 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"step-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Step 2: Perform Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: checklist.task1,\n            onChange: () => toggleChecklistItem('task1')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this), \"Clean mirrors\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: checklist.task2,\n            onChange: () => toggleChecklistItem('task2')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this), \"Refill soap dispensers\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            checked: checklist.task3,\n            onChange: () => toggleChecklistItem('task3')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this), \"Mop floors\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleFinish,\n        children: \"Finish Job\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(JobDetails, \"8LKYLIKdfp9KT0uNNj6PbV3Y0Iw=\");\n_c = JobDetails;\nexport default JobDetails;\nvar _c;\n$RefreshReg$(_c, \"JobDetails\");","map":{"version":3,"names":["React","useState","api","jsxDEV","_jsxDEV","JobDetails","job","_s","currentStep","setCurrentStep","checklist","setChecklist","task1","task2","task3","error","setError","handleStart","post","jobId","id","washroom_name","washroom","then","console","log","catch","err","response","data","message","request","handleFinish","window","location","reload","toggleChecklistItem","item","className","children","fileName","_jsxFileName","lineNumber","columnNumber","department","lab_boy","style","color","onClick","type","checked","onChange","_c","$RefreshReg$"],"sources":["C:/Users/Vaibhav/Downloads/washroom/washroom/frontend/washrrom-management-app/src/components/JobDetails.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport api from '../utils/api'; // Assuming this is an Axios instance or similar\r\n\r\nconst JobDetails = ({ job }) => {\r\n  const [currentStep, setCurrentStep] = useState(1);\r\n  const [checklist, setChecklist] = useState({\r\n    task1: false,\r\n    task2: false,\r\n    task3: false,\r\n  });\r\n  const [error, setError] = useState(null); // State to handle errors\r\n\r\n  const handleStart = () => {\r\n    api.post('/api/start_job', { jobId: job.id, washroom_name: job.washroom })\r\n        .then(() => {\r\n            console.log('Door locked, job started');\r\n            setCurrentStep(2);\r\n            setError(null);\r\n        })\r\n        .catch((err) => {\r\n            console.error('Error starting job:', err);\r\n            if (err.response) {\r\n                // Server responded with a status code outside 2xx\r\n                setError(`Failed to start the job: ${err.response.data.message || 'Server error'}`);\r\n            } else if (err.request) {\r\n                // No response was received from server\r\n                setError('No response from server. Please check your connection.');\r\n            } else {\r\n                // Something else caused the error\r\n                setError(`Unexpected error: ${err.message}`);\r\n            }\r\n        });\r\n};\r\n\r\nconst handleFinish = () => {\r\n  // Send signal to ESP32 to unlock door\r\n  api.post('/api/finish_job', { jobId: job.id, washroom_name: job.washroom })\r\n      .then((response) => {\r\n          // Axios automatically resolves for 2xx responses\r\n          console.log('Door unlocked, job finished');\r\n          setError(null); // Clear any previous errors\r\n\r\n          // Reload the page after successful job finish\r\n          window.location.reload();\r\n      })\r\n      .catch((err) => {\r\n          console.error('Error finishing job:', err);\r\n          if (err.response) {\r\n              // Server responded with a status code outside 2xx\r\n              setError(`Failed to finish the job: ${err.response.data.message || 'Server error'}`);\r\n          } else if (err.request) {\r\n              // No response was received from server\r\n              setError('No response from server. Please check your connection.');\r\n          } else {\r\n              // Something else caused the error\r\n              setError(`Unexpected error: ${err.message}`);\r\n          }\r\n      });\r\n};\r\n\r\n  const toggleChecklistItem = (item) => {\r\n    setChecklist({\r\n      ...checklist,\r\n      [item]: !checklist[item],\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"job-details\">\r\n      <h3>Job Details</h3>\r\n      <p>{`Department: ${job.department}`}</p>\r\n      <p>{`Washroom name: ${job.washroom}`}</p>\r\n      <p>{`labboy name: ${job.lab_boy}`}</p>\r\n\r\n      {error && <p className=\"error-message\" style={{ color: 'red' }}>{error}</p>} {/* Display error message */}\r\n\r\n      {currentStep === 1 && (\r\n        <div className=\"step-1\">\r\n          <h4>Step 1: Instructions</h4>\r\n          <p>Please ensure you have all necessary cleaning materials before starting.</p>\r\n          <button onClick={handleStart}>Start Job</button>\r\n        </div>\r\n      )}\r\n\r\n      {currentStep === 2 && (\r\n        <div className=\"step-2\">\r\n          <h4>Step 2: Perform Tasks</h4>\r\n          <ul>\r\n            <li>\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={checklist.task1}\r\n                onChange={() => toggleChecklistItem('task1')}\r\n              />\r\n              Clean mirrors\r\n            </li>\r\n            <li>\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={checklist.task2}\r\n                onChange={() => toggleChecklistItem('task2')}\r\n              />\r\n              Refill soap dispensers\r\n            </li>\r\n            <li>\r\n              <input\r\n                type=\"checkbox\"\r\n                checked={checklist.task3}\r\n                onChange={() => toggleChecklistItem('task3')}\r\n              />\r\n              Mop floors\r\n            </li>\r\n          </ul>\r\n          <button onClick={handleFinish}>Finish Job</button>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default JobDetails;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}